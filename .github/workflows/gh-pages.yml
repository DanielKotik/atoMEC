name: docs

on:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - master
      - develop

jobs:
  python-style-checks:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -qU pydocstyle flake8

      - name: Check docstrings
        run: pydocstyle --convention=numpy atoMEC

      - name: Lint with flake8
        run: flake8 atoMEC --count --show-source --statistics

  build-and-deploy-pages:
    needs: python-style-checks
    runs-on: ubuntu-18.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -q -r docs/requirements.txt

      - name: Build API and docs
        run: |
          sphinx-apidoc -o docs/source/api atoMEC
          sphinx-build -W --keep-going -b html -d docs/_build/doctrees docs/source docs/_build/html
          mv -v docs/_build/html public

      - name: Deploy
        if: ${{ github.event_name == 'push' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./public
          
  run-test-suite:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip
        
      - name : Install pipenv
        run : python -m pip install --upgrade pipenv wheel
  
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
     
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
     
      - name: Install atoMEC
        run: pipenv run python -m pip install -e .
        
      - name: Run test suite
        run: pipenv run pytest --cov=atoMEC --random-order tests/
         
      
